# This workflow will create game artifacts used in Awpy

name: artifacts

on:
  pull_request:
    branches: [main]
    paths:
      - "awpy/**"
      - "tests/**"
      - "pyproject.toml"
  workflow_dispatch:

# on:
#   push:
#     branches: [main]
#   schedule:
#     - cron: "49 1 * * *"
#   workflow_dispatch:

env:
  PYTHON_VERSION: 3.13
  SOURCE2_VIEWER_URL: https://github.com/ValveResourceFormat/ValveResourceFormat/releases/download/11.1/cli-windows-x64.zip
  CS2_APP_ID: 730

jobs:
  generate-artifacts:
    runs-on: windows-latest
    steps:
      - name: Checkout awpy library
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        run: |
          uv python install ${{ env.PYTHON_VERSION }}

      - name: Install awpy
        shell: bash
        run: |
          uv sync --group dev --group test
          uv tool install .

      - name: Setup SteamCMD
        uses: CyberAndrii/setup-steamcmd@v1

      - name: Install Counter-Strike 2
        run: |
          $csDir = Join-Path (Get-Location) "cs_go"
          steamcmd +force_install_dir $csDir +login anonymous +app_update ${{ env.CS2_APP_ID }} +quit

      - name: Get Counter-Strike 2 Version
        run: |
          $appInfoOutput = steamcmd +login anonymous +app_info_print 730 +logoff +quit | Out-String
          if ($appInfoOutput -match '"branches"\s*\{\s*"public"\s*\{\s*"buildid"\s*"(\d+)"\s*"timeupdated"\s*"(\d+)"') {
              $latestPatchId = $matches[1]
              $latestPatchTimestamp = $matches[2]
              Write-Output "BuildID: $buildid, Timestamp: $timestamp"
          } else {
              throw "Error: buildid and timestamp not found in CS2 app info output."
          }
          echo "Current Counter-Strike 2 Version: $latestPatchId (Updated: $latestPatchTimestamp)"

      - name: Install Source2Viewer-CLI
        run: |
          Invoke-WebRequest -Uri ${{ env.SOURCE2_VIEWER_URL }} -OutFile ".\cli-windows-x64.zip"
          Expand-Archive -Path .\cli-windows-x64.zip -DestinationPath . -Force

      - name: Generate Triangles
        run: |
          Get-ChildItem -Force
          .\scripts\generate-tris.ps1 -inputPath "cs_go\game\csgo\maps"

      - name: Generate Map Data
        run: |
          Get-ChildItem -Force
          .\scripts\generate-maps.ps1 -inputPath "cs_go\game\csgo\pak01_dir.vpk"

      - name: Generate Nav
        run: |
          Get-ChildItem -Force
          .\scripts\generate-navs.ps1 -inputPath "cs_go\game\csgo\maps"

      - name: Generate Spawns
        run: |
          Get-ChildItem -Force
          .\scripts\generate-spawns.ps1 -inputPath "cs_go\game\csgo\maps"

      - name: Upload Artifacts to Blob Storage
        run: |
          echo "Uploading artifacts to Blob Storage..."

      - name: Update Latest Patch
        run: |
          .\scripts\update-latest-patch.ps1
          uv run ruff format .
          uv run awpy artifacts
